// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator zod {
  provider     = "zod-prisma-types"
  output       = "../src/generated/zod"   // 出力先ディレクトリ
  useMultipleFiles = true                // モデルごとにファイル分割
  exportAll      = true                  // index.tsでまとめてexport
  prismaClientImportPath = "@prisma/client" // import元を指定
}

model User {
  id String @id @default(uuid())
  email String @unique
  name String
  password String
  votes Vote[]
  createdAt DateTime @default(now())
}

enum Choice {
  A
  B
}

model Topic {
  id Int @id @default(autoincrement())
  day DateTime @db.Date @default(now())
  title String
  question String
  optionA String
  optionB String
  openedAt DateTime @default(now())
  closed Boolean @default(false)
  votes Vote[]

  @@unique([day])
}

model Vote {
  id Int @id @default(autoincrement())
  userId String
  user User @relation(fields: [userId], references: [id])
  
  topicId Int
  topic Topic @relation(fields: [topicId], references: [id])

  choice Choice
  createdAt DateTime @default(now())

  @@unique([userId, topicId])
  @@index([topicId, choice])
  @@index([userId])
}